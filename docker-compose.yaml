services:
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_service
    env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "${SERVER_PORT}:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - innouserservice_network


  postgres:
    image: postgres:15
    container_name: postgres_user_service
    env_file: .env
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - innouserservice_network

  redis:
    image: redis:7-alpine
    container_name: redis_user_service
    env_file: .env
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - innouserservice_network

volumes:
  postgres_data:
  redis_data:

networks:
  innouserservice_network:
    driver: bridge
