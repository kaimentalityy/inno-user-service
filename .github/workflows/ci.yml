name: CI Pipeline

on:
  push:
    branches:
      - tasks/USR-1
  pull_request:
    branches:
      - tasks/USR-1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build Project
        run: mvn clean compile -B

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run Tests
        run: mvn test -B

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: ${{secrets.SONAR_HOST_URL}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: mvn sonar:sonar -Dsonar.projectKey=your_project_key -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN

  docker:
    name: Docker build and push
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and Push Docker Image
        run: |
          docker build -t your-dockerhub-username/your-app:${{github.sha}} .
          docker push your-dockerhub-username/your-app:${{github.sha}}
